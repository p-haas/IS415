{
  "hash": "4d4f20c074724954688ea38c4148071c",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise - Choropleth Mapping with R\"\nsubtitle: \"Session 3\"\n\nauthor: \"Pierre HAAS\"\n\ndate: \"January 23, 2023\"\ndate-modified: \"2023-03-19\"\n\nexecute:\n  eval: true\n  echo: true\n  warning: false\neditor: visual\n---\n\n\n# 1 Getting Started\n\n## 1.1 Installing and Loading R Packages\n\nIn this section, I will install and load the required R packages, tidyverse, sf, and tmap packages. Here we use the pacman library to install and load the packages at once.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap, stringr)\n```\n:::\n\n\n# 2 Importing Data into R\n\n## 2.1 Importing Geospatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\p-haas\\IS415\\Hands-on_Ex\\Hands-on_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n:::\n:::\n\n\n## 2.2 Importing Attribute Data into R\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\") %>%\n  filter(Time==2020)\n```\n:::\n\n\n# 3 Data Preparation\n\nIn this section, we will start off by preparing a data table with year 2020 values. The data table will include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY. Please find below a description of the mentioned variables:\n\n-   YOUNG: age group 0 to 4 until age group 20 to 24\n\n-   ECONOMY ACTIVE: age group 25-29 until age group 60-64\n\n-   AGED: age group 65 and above\n\n-   TOTAL: all age group\n\n-   DEPENDENCY: the ratio between young and aged against economy active group\n\n## 3.1 Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n```\n:::\n\n\n## 3.2 Joining the Geospatial and Attribute Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n```\n:::\n\n\n# 4 Choropleth Mapping for Geospatial Data using *tmap*\n\n## 4.1 Quickly plot a choropleth map with *qtm()* function\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## 4.2 Creating a choropleth map using *tmap's* elements\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 4.2.1 Drawing a base map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) + \n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### 4.2.2 Drawing a choropleth map using *tm_polygons()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) + \n  tm_polygons(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### 4.2.3 Drawing a choropleth map using *tm_fill()* and *tm_border()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1, alpha = 1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nN.B. Some important things to note about the *tm_fill()* function:\n\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\n\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\n-   *col* = border colour,\n\n-   *lwd* = border line width. The default is 1, and\n\n-   *lty* = border line type. The default is \"solid\".\n\n## 4.3 Data classification methods of *tmap*\n\n### 4.3.1 Plotting choropleth maps using built-in classification methods\n\nThe code chunk below shows a quantile data classification that used 5 classes. In order words, we specify using the *jenks* method with 5 classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nIn the code chunk below, *equal* data classification method is used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n#### 4.3.1.1 DIY - Test new classification methods\n\nIn this section, I tested two classification methods, namely *quantile* and *sd*.\n\n\n::: {#fig-mpg .cell .column-page layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![Two classes](Hands-on_Ex03_files/figure-html/fig-mpg-1.png){#fig-mpg-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Six classes](Hands-on_Ex03_files/figure-html/fig-mpg-2.png){#fig-mpg-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Ten classes](Hands-on_Ex03_files/figure-html/fig-mpg-3.png){#fig-mpg-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Twenty classes](Hands-on_Ex03_files/figure-html/fig-mpg-4.png){#fig-mpg-4 width=672}\n:::\n\nQuantile Distribution of Dependency Ratio by Planning Subzone.\n:::\n\n::: {#fig-mpg2 .cell .column-page layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![Two classes](Hands-on_Ex03_files/figure-html/fig-mpg2-1.png){#fig-mpg2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Six classes](Hands-on_Ex03_files/figure-html/fig-mpg2-2.png){#fig-mpg2-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Ten classes](Hands-on_Ex03_files/figure-html/fig-mpg2-3.png){#fig-mpg2-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Twenty classes](Hands-on_Ex03_files/figure-html/fig-mpg2-4.png){#fig-mpg2-4 width=672}\n:::\n\nStandard Deviation Distribution of Dependency Ratio by Planning Subzone.\n:::\n\n\n### 4.3.2 Plotting choropleth maps with custom break\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz_pop2020$DEPENDENCY)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## 4.4 Colour Scheme\n\n### 4.4.1 Using ColourBrewer palette\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## 4.5 Map Layouts\n\n### 4.5.1 Map Legend\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### 4.5.2 Map Style\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### 4.5.3 Cartographic Furniture\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nTo reset the default style, refer to the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_style(\"white\")\n```\n:::\n\n\n## 4.6 Drawing Small Multiple Choropleth Maps\n\n### 4.6.1 By assigning multiple values to at least one of the aesthetic arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n### 4.6.2 By defining a group-by variable in *tm_facets()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### 4.6.3 By creating multiple stand-alone maps with *tmap_arrange()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoungmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap <- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n## 4.7 Mapping Spatial Object Meeting a Selection Criterion\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex03_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}