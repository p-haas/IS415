[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this section, I will install and load the required R packages, being tidyverse and sf libraries/packages. Here we use the pacman library to install and load the libraries in case it is needed.\n\npacman::p_load(tidyverse, sf)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#import-data-in-shp-file-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#import-data-in-shp-file-format",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.2.1 Import data in shp file format",
    "text": "1.2.1 Import data in shp file format\nHere we use the function st_read to read the files stored under the shp format.\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\p-haas\\IS415\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\ncpg <- st_read(dsn = \"data/geospatial\", \n                layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\p-haas\\IS415\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2248 features and 0 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nCRS:           NA"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#import-data-in-kml-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#import-data-in-kml-format",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.2.2 Import data in kml format",
    "text": "1.2.2 Import data in kml format\nHere we use the function st_read to read the files stored under the kml format. Note that in this second case, we do not include the layer in the code.\n\npsl <- st_read(dsn = \"data/geospatial/preschools-location.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\p-haas\\IS415\\Hands-on_Ex\\Hands-on_Ex01\\data\\geospatial\\preschools-location.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-st_geometry",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-st_geometry",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.3.1 Working with st_geometry()",
    "text": "1.3.1 Working with st_geometry()\nNote that st_geometry() can be replaced by mpsz$geometry or mpsz[[1]]\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nNotice that the print only displays basic information of the feature class such as type of geometry, the geographic extent of the features and the coordinate system of the data."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-glimpse",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-glimpse",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.3.2 Working with glimpse()",
    "text": "1.3.2 Working with glimpse()\nThe function glimpse() reports information about the data type of every column or field.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-head",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-head",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.3.3 Working with head()",
    "text": "1.3.3 Working with head()\nThe function prints the first five rows of the dataset.\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting---polygon-feature",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting---polygon-feature",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.4.1 Plotting - Polygon Feature",
    "text": "1.4.1 Plotting - Polygon Feature\n\nplot(mpsz)\n\n\n\n\nThe default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above. We can, however, choose to plot only the geometry by using the code chunk below.\n\nplot(st_geometry(mpsz))\n\n\n\n\nAlternatively, we can also choose the plot the sf object by using a specific attribute as shown in the code chunk below.\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting---polyline-feature",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting---polyline-feature",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.4.2 Plotting - Polyline Feature",
    "text": "1.4.2 Plotting - Polyline Feature\n\nplot(cpg)\n\n\n\n\n\nplot(st_geometry(cpg))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting---multipoint-feature",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting---multipoint-feature",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.4.3 Plotting - Multipoint Feature",
    "text": "1.4.3 Plotting - Multipoint Feature\n\nplot(psl)\n\n\n\n\n\nplot(st_geometry(psl))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data-in-csv-format",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data-in-csv-format",
    "title": "Hands-on Exercise - Session 1: Geospatial Data Wrangling with R",
    "section": "1.6.1 Importing data in csv format",
    "text": "1.6.1 Importing data in csv format"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "",
    "text": "In this section, I will install and load the required R packages, tidyverse, sf, and tmap packages. Here we use the pacman library to install and load the packages at once.\n\npacman::p_load(tidyverse, sf, tmap, stringr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-geospatial-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-geospatial-data",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "2.1 Importing Geospatial Data",
    "text": "2.1 Importing Geospatial Data\n\nmpsz <- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\p-haas\\IS415\\Hands-on_Ex\\Hands-on_Ex03\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-attribute-data-into-r",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-attribute-data-into-r",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "2.2 Importing Attribute Data into R",
    "text": "2.2 Importing Attribute Data into R\n\npopdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\") %>%\n  filter(Time==2020)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-wrangling",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "3.1 Data Wrangling",
    "text": "3.1 Data Wrangling\n\npopdata2020 <- popdata %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP` = sum(`Pop`)) %>%\n  ungroup()%>%\n  pivot_wider(names_from=AG, \n              values_from=POP) %>%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %>%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%>%\nmutate(`AGED`=rowSums(.[16:21])) %>%\nmutate(`TOTAL`=rowSums(.[3:21])) %>%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#joining-the-geospatial-and-attribute-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#joining-the-geospatial-and-attribute-data",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "3.2 Joining the Geospatial and Attribute Data",
    "text": "3.2 Joining the Geospatial and Attribute Data\n\npopdata2020 <- popdata2020 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %>%\n  filter(`ECONOMY ACTIVE` > 0)\n\n\nmpsz_pop2020 <- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#quickly-plot-a-choropleth-map-with-qtm-function",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#quickly-plot-a-choropleth-map-with-qtm-function",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "4.1 Quickly plot a choropleth map with qtm() function",
    "text": "4.1 Quickly plot a choropleth map with qtm() function\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-a-choropleth-map-using-tmaps-elements",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-a-choropleth-map-using-tmaps-elements",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "4.2 Creating a choropleth map using tmap’s elements",
    "text": "4.2 Creating a choropleth map using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n4.2.1 Drawing a base map\n\ntm_shape(mpsz_pop2020) + \n  tm_polygons()\n\n\n\n\n\n\n4.2.2 Drawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020) + \n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n4.2.3 Drawing a choropleth map using tm_fill() and tm_border()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1, alpha = 1)\n\n\n\n\nN.B. Some important things to note about the tm_fill() function:\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#data-classification-methods-of-tmap",
    "title": "Hands-on Exercise - Choropleth Mapping with R",
    "section": "4.3 Data classification methods of tmap",
    "text": "4.3 Data classification methods of tmap\n\n4.3.1 Plotting choropleth maps using built-in classification methods\nThe code chunk below shows a quantile data classification that used 5 classes. In order words, we specify using the jenks method with 5 classes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nDIY\n\n\nShow the code\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"pretty\") +\n  tm_borders(alpha = 0.5)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n(a) Quantile classification\n\n\n\n\n\n\n\n(b) Standard deviation classification\n\n\n\n\n\n\n\n\n\n(c) Pretty classification\n\n\n\n\n\n\n\n(d) Kmeans classification\n\n\n\n\nFigure 1: Distribution of Dependency Ratio by Planning Subzone."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "",
    "text": "pacman::p_load(sf, tidyverse, readr, funModeling)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#import-shp-file---geospatial-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#import-shp-file---geospatial-data",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "2.1 Import shp file - Geospatial data",
    "text": "2.1 Import shp file - Geospatial data\n\nnga = st_read(dsn = \"data/geospatial\",\n                   layer = \"nga_admbnda_adm2\") %>% st_transform(crs = 26391)\n\nReading layer `nga_admbnda_adm2' from data source \n  `C:\\p-haas\\IS415\\In-class_Ex\\In-class_Ex02\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 774 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2.668534 ymin: 4.273007 xmax: 14.67882 ymax: 13.89442\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#understanding-the-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#understanding-the-data",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "2.2 Understanding the data",
    "text": "2.2 Understanding the data\n\n2.2.1 Nigeria Level-2 Administrative Boundary (example)\n\nst_geometry(nga)\n\nGeometry set for 774 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 28879.72 ymin: 30292.37 xmax: 1343798 ymax: 1094244\nProjected CRS: Minna / Nigeria West Belt\nFirst 5 geometries:\n\n\n\nglimpse(nga)\n\nRows: 774\nColumns: 17\n$ Shape_Leng <dbl> 0.2370744, 0.2624772, 3.0753158, 2.5379842, 0.6871498, 1.06…\n$ Shape_Area <dbl> 0.0015239210, 0.0035311037, 0.3268678399, 0.0683785064, 0.0…\n$ ADM2_EN    <chr> \"Aba North\", \"Aba South\", \"Abadam\", \"Abaji\", \"Abak\", \"Abaka…\n$ ADM2_PCODE <chr> \"NG001001\", \"NG001002\", \"NG008001\", \"NG015001\", \"NG003001\",…\n$ ADM2_REF   <chr> \"Aba North\", \"Aba South\", \"Abadam\", \"Abaji\", \"Abak\", \"Abaka…\n$ ADM2ALT1EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM2ALT2EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1_EN    <chr> \"Abia\", \"Abia\", \"Borno\", \"Federal Capital Territory\", \"Akwa…\n$ ADM1_PCODE <chr> \"NG001\", \"NG001\", \"NG008\", \"NG015\", \"NG003\", \"NG011\", \"NG02…\n$ ADM0_EN    <chr> \"Nigeria\", \"Nigeria\", \"Nigeria\", \"Nigeria\", \"Nigeria\", \"Nig…\n$ ADM0_PCODE <chr> \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\", \"NG\",…\n$ date       <date> 2016-11-29, 2016-11-29, 2016-11-29, 2016-11-29, 2016-11-29…\n$ validOn    <date> 2019-04-17, 2019-04-17, 2019-04-17, 2019-04-17, 2019-04-17…\n$ validTo    <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ SD_EN      <chr> \"Abia South\", \"Abia South\", \"Borno North\", \"Federal Capital…\n$ SD_PCODE   <chr> \"NG00103\", \"NG00103\", \"NG00802\", \"NG01501\", \"NG00302\", \"NG0…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((552560.3 12..., MULTIPOLYGON (…\n\n\n\n# head(nga)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-aspatial-data-into-r-workbook",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#importing-aspatial-data-into-r-workbook",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "2.3 Importing Aspatial data into R Workbook",
    "text": "2.3 Importing Aspatial data into R Workbook\n\n2.3.1 Import csv file - Aspatial data\n\nwpdx_nigeria = filter(read_csv(\"data/aspatial/Water_Point_Data_Exchange_-_Plus__WPdx__.csv\"), `#clean_country_name` == \"Nigeria\")\n\n\n\n2.3.2 Convert Aspatial into Geospatial data\n\nwpdx_nigeria$Geometry = st_as_sfc(wpdx_nigeria$`New Georeferenced Column`)\nwpdx_sf = st_sf(wpdx_nigeria, crs = 4326) %>% st_transform(crs = 26391)\nwpdx_sf\n\nSimple feature collection with 95008 features and 70 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 32536.82 ymin: 33461.24 xmax: 1292096 ymax: 1091052\nProjected CRS: Minna / Nigeria West Belt\n# A tibble: 95,008 × 71\n   row_id `#source`      #lat_…¹ #lon_…² #repo…³ #stat…⁴ #wate…⁵ #wate…⁶ #wate…⁷\n *  <dbl> <chr>            <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 429068 GRID3             7.98    5.12 08/29/… Unknown <NA>    <NA>    Tapsta…\n 2 222071 Federal Minis…    6.96    3.60 08/16/… Yes     Boreho… Well    Mechan…\n 3 160612 WaterAid          6.49    7.93 12/04/… Yes     Boreho… Well    Hand P…\n 4 160669 WaterAid          6.73    7.65 12/04/… Yes     Boreho… Well    <NA>   \n 5 160642 WaterAid          6.78    7.66 12/04/… Yes     Boreho… Well    Hand P…\n 6 160628 WaterAid          6.96    7.78 12/04/… Yes     Boreho… Well    Hand P…\n 7 160632 WaterAid          7.02    7.84 12/04/… Yes     Boreho… Well    Hand P…\n 8 642747 Living Water …    7.33    8.98 10/03/… Yes     Boreho… Well    Mechan…\n 9 642456 Living Water …    7.17    9.11 10/03/… Yes     Boreho… Well    Hand P…\n10 641347 Living Water …    7.20    9.22 03/28/… Yes     Boreho… Well    Hand P…\n# … with 94,998 more rows, 62 more variables: `#water_tech_category` <chr>,\n#   `#facility_type` <chr>, `#clean_country_name` <chr>, `#clean_adm1` <chr>,\n#   `#clean_adm2` <chr>, `#clean_adm3` <chr>, `#clean_adm4` <chr>,\n#   `#install_year` <dbl>, `#installer` <chr>, `#rehab_year` <lgl>,\n#   `#rehabilitator` <lgl>, `#management_clean` <chr>, `#status_clean` <chr>,\n#   `#pay` <chr>, `#fecal_coliform_presence` <chr>,\n#   `#fecal_coliform_value` <dbl>, `#subjective_quality` <chr>, …"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#exclude-redundant-fields",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#exclude-redundant-fields",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "3.1 Exclude redundant fields",
    "text": "3.1 Exclude redundant fields\n\nnga <- nga %>%\n  select(c(3:4, 8:9))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#checking-for-duplicates-with-ifelse-statement",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#checking-for-duplicates-with-ifelse-statement",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "3.2 Checking for duplicates with IFELSE() statement",
    "text": "3.2 Checking for duplicates with IFELSE() statement\n\nduplicated_LGA <- nga$ADM2_EN[duplicated(nga$ADM2_EN)==TRUE]\nnga$ADM2_EN = ifelse(nga$ADM2_EN %in% duplicated_LGA, paste(nga$ADM2_EN, nga$ADM1_EN, sep=\", \"), nga$ADM2_EN)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-water-point-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#extracting-water-point-data",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "4.1 Extracting Water Point Data",
    "text": "4.1 Extracting Water Point Data\n\nwp_functional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\n\nwp_nonfunctional <- wp_sf_nga %>%\n  filter(status_clean %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional due to dry season\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\"))\n\n\nwp_unknown <- wp_sf_nga %>%\n  filter(status_clean == \"unknown\")\n\n\nfreq(data = wp_functional,\n     input = 'status_clean')\n\n\n\n\n                 status_clean frequency percentage cumulative_perc\n1                  Functional     45883      87.99           87.99\n2 Functional but needs repair      4579       8.78           96.77\n3   Functional but not in use      1686       3.23          100.00\n\n\n\nfreq(data = wp_nonfunctional,\n     input = 'status_clean')\n\n\n\n\n                      status_clean frequency percentage cumulative_perc\n1                   Non-Functional     29385      91.25           91.25\n2 Non-Functional due to dry season      2403       7.46           98.71\n3         Abandoned/Decommissioned       234       0.73           99.44\n4                        Abandoned       175       0.54           99.98\n5 Non functional due to dry season         7       0.02          100.00\n\n\n\nfreq(data = wp_unknown,\n     input = 'status_clean')\n\n\n\n\n  status_clean frequency percentage cumulative_perc\n1      unknown     10656        100             100"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#performing-point-in-polygon-count",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#performing-point-in-polygon-count",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "4.2 Performing Point-in-Polygon Count",
    "text": "4.2 Performing Point-in-Polygon Count\n\nNGA_wp <- nga %>% \n  mutate(`total_wp` = lengths(\n    st_intersects(nga, wp_sf_nga))) %>%\n  mutate(`wp_functional` = lengths(\n    st_intersects(nga, wp_functional))) %>%\n  mutate(`wp_nonfunctional` = lengths(\n    st_intersects(nga, wp_nonfunctional))) %>%\n  mutate(`wp_unknown` = lengths(\n    st_intersects(nga, wp_unknown)))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualing-attributes-by-using-statistical-graphs",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#visualing-attributes-by-using-statistical-graphs",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "4.3 Visualing attributes by using statistical graphs",
    "text": "4.3 Visualing attributes by using statistical graphs\n\nggplot(data = NGA_wp,\n       aes(x = total_wp)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept=mean(\n    total_wp, na.rm=T)),\n             color=\"red\", \n             linetype=\"dashed\", \n             size=0.8) +\n  ggtitle(\"Distribution of total water points by LGA\") +\n  xlab(\"No. of water points\") +\n  ylab(\"No. of\\nLGAs\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#saving-the-analytical-data-in-rds-format",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#saving-the-analytical-data-in-rds-format",
    "title": "In-Class Exercise - Geospatial Data Wrangling",
    "section": "4.4 Saving the analytical data in rds format",
    "text": "4.4 Saving the analytical data in rds format\n\nwrite_rds(NGA_wp, \"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "pacman::p_load(tidyverse, tmap, sf)\n\n\n\n\n\nNGA_wp <- read_rds(\"data/NGA_wp.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#visualising-distribution-of-non-functional-water-point",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html#visualising-distribution-of-non-functional-water-point",
    "title": "In-class Exercise 3",
    "section": "2.1 Visualising distribution of non-functional water point",
    "text": "2.1 Visualising distribution of non-functional water point"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise - Spatial Point Patterns Analysis",
    "section": "",
    "text": "pacman::p_load(maptools, sf, raster, spatstat, tmap)\n\nThings to learn from this code chunk.\n\n\n\n\nchildcare_sf = st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs=3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\p-haas\\IS415\\In-class_Ex\\In-class_Ex04\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nsg_sf = st_read(dsn=\"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\p-haas\\IS415\\In-class_Ex\\In-class_Ex04\\data' using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\nmpsz_sf = st_read(dsn=\"data\", layer=\"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\p-haas\\IS415\\In-class_Ex\\In-class_Ex04\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#converting-sf-data-frames-into-sp-spatial-class",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#converting-sf-data-frames-into-sp-spatial-class",
    "title": "In-class Exercise - Spatial Point Patterns Analysis",
    "section": "3.1 Converting sf data frames into sp Spatial* Class",
    "text": "3.1 Converting sf data frames into sp Spatial* Class\n\nchildcare = as_Spatial(childcare_sf)\nmpsz      = as_Spatial(mpsz_sf)\nsg        = as_Spatial(sg_sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#converting-spatial-class-into-generic-sp-format",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#converting-spatial-class-into-generic-sp-format",
    "title": "In-class Exercise - Spatial Point Patterns Analysis",
    "section": "3.2 Converting Spatial* Class into generic sp format",
    "text": "3.2 Converting Spatial* Class into generic sp format\n\nchildcare_sp = as(childcare, \"SpatialPoints\")\nsg_sp        = as(sg, \"SpatialPolygons\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#converting-generic-sp-format-into-spatstat-ppps-format",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#converting-generic-sp-format-into-spatstat-ppps-format",
    "title": "In-class Exercise - Spatial Point Patterns Analysis",
    "section": "3.3 Converting generic sp format into spatstat ppp’s format",
    "text": "3.3 Converting generic sp format into spatstat ppp’s format\n\nchildcare_ppp <- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1545 points\nwindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415",
    "section": "",
    "text": "Welcome to IS415 Geospatial Analytics and Applications.\nThis is the course website of IS415 I study this semester. You will find all my course work on this website."
  }
]